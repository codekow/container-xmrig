FROM docker.io/ubuntu:22.04 as build-cuda-plugin

ARG CUDA_VERSION="11-4"

RUN apt update && \
    apt install -y nvidia-cuda-toolkit

RUN apt install -y git wget curl build-essential cmake automake libtool autoconf && \
    apt install -y gcc-9 g++-9 && \
    update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100 && \
    update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100


ARG CUDA_PLUGIN_VERSION="6.21.1"

WORKDIR /root
RUN curl -sL https://github.com/xmrig/xmrig-cuda/archive/refs/tags/v${CUDA_PLUGIN_VERSION}.tar.gz | tar zxf - && \
    mv xmrig-cuda-${CUDA_PLUGIN_VERSION} xmrig-cuda

WORKDIR /root/xmrig-cuda/build
RUN cmake .. -DCUDA_LIB=/usr/lib/x86_64-linux-gnu/stubs/libcuda.so -DCUDA_TOOLKIT_ROOT_DIR=/usr/lib/x86_64-linux-gnu -DCUDA_ARCH="75;80;86;87" && \
    make -j $(nproc)

FROM docker.io/ubuntu:22.04 AS build

ARG XMRIG_VERSION="6.21.1"

# hadolint ignore=DL3018
RUN apt update && \
    apt install -y git wget curl build-essential cmake automake libtool autoconf && \
    apt install -y gcc-9 g++-9 && \
    update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100 && \
    update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100

WORKDIR /root
RUN git clone --depth 1 --branch v${XMRIG_VERSION} https://github.com/xmrig/xmrig
WORKDIR /root/xmrig
COPY patch.maxdonate /root/xmrig/
RUN git apply patch.maxdonate

COPY patch.donate /root/xmrig/
RUN git apply patch.donate

RUN mkdir build

WORKDIR /root/xmrig/scripts
RUN ./build_deps.sh

WORKDIR /root/xmrig/build
RUN cmake .. \
      -DXMRIG_DEPS=scripts/deps && \
    make -j"$(nproc)"

# miner
FROM docker.io/ubuntu:22.04 as runtime

### https://github.com/opencontainers/image-spec/blob/main/annotations.md
LABEL \
      org.opencontainers.image.description.vendor="xmrig" \
      org.opencontainers.image.description="A container used to mine XMR using xmrig" \
      org.opencontainers.image.source="https://github.com/codekow/container-xmrig"

# setup: xmrig
ENV XMRIG_VERSION="6.21.1"

RUN apt update && \
    apt -y install libnvidia-compute-535 libnvrtc11.2 && \
    apt -y install nvidia-opencl-dev && \
    rm -rf /var/lib/apt/lists/*

COPY --from=build --chown=root /root/xmrig/build/xmrig /usr/local/bin
COPY --from=build-cuda-plugin /root/xmrig-cuda/build/libxmrig-cuda.so /usr/local/bin/

# setup: entrypoint and other scripts over
COPY bin /usr/local/bin

USER 1001

WORKDIR /home/miner
VOLUME /home/miner

EXPOSE 3333 8080

ENTRYPOINT ["entrypoint.sh"]
